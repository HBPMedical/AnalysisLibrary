--- include/ANN/ANN.h	2010-01-27 20:40:01.000000000 -0800
+++ include/ANN/ANN.h	2011-02-12 19:40:47.000000000 -0800
@@ -497,7 +497,8 @@
 		int				k,				// number of near neighbors to return
 		ANNidxArray		nn_idx,			// nearest neighbor array (modified)
 		ANNdistArray	dd,				// dist to near neighbors (modified)
-		double			eps=0.0			// error bound
+		double			eps=0.0,		// error bound
+		int		maxPts = 0
 		) = 0;							// pure virtual (defined elsewhere)
 
 	virtual int annkFRSearch(			// approx fixed-radius kNN search
@@ -506,7 +507,8 @@
 		int				k = 0,			// number of near neighbors to return
 		ANNidxArray		nn_idx = NULL,	// nearest neighbor array (modified)
 		ANNdistArray	dd = NULL,		// dist to near neighbors (modified)
-		double			eps=0.0			// error bound
+		double			eps=0.0,		// error bound
+		int		maxPts = 0
 		) = 0;							// pure virtual (defined elsewhere)
 
 	virtual int theDim() = 0;			// return dimension of space
@@ -552,7 +554,8 @@
 		int				k,				// number of near neighbors to return
 		ANNidxArray		nn_idx,			// nearest neighbor array (modified)
 		ANNdistArray	dd,				// dist to near neighbors (modified)
-		double			eps=0.0);		// error bound
+		double			eps=0.0,		// error bound
+		int		maxPts = 0);
 
 	int annkFRSearch(					// approx fixed-radius kNN search
 		ANNpoint		q,				// query point
@@ -560,7 +563,8 @@
 		int				k = 0,			// number of near neighbors to return
 		ANNidxArray		nn_idx = NULL,	// nearest neighbor array (modified)
 		ANNdistArray	dd = NULL,		// dist to near neighbors (modified)
-		double			eps=0.0);		// error bound
+		double			eps=0.0,		// error bound
+		int		maxPts = 0);
 
 	int theDim()						// return dimension of space
 		{ return dim; }
@@ -743,14 +747,16 @@
 		int				k,				// number of near neighbors to return
 		ANNidxArray		nn_idx,			// nearest neighbor array (modified)
 		ANNdistArray	dd,				// dist to near neighbors (modified)
-		double			eps=0.0);		// error bound
+		double			eps=0.0,		// error bound
+		int		maxPts = 0);
 
 	void annkPriSearch( 				// priority k near neighbor search
 		ANNpoint		q,				// query point
 		int				k,				// number of near neighbors to return
 		ANNidxArray		nn_idx,			// nearest neighbor array (modified)
 		ANNdistArray	dd,				// dist to near neighbors (modified)
-		double			eps=0.0);		// error bound
+		double			eps=0.0,		// error bound
+		int		maxPts = 0);
 
 	int annkFRSearch(					// approx fixed-radius kNN search
 		ANNpoint		q,				// the query point
@@ -758,7 +764,8 @@
 		int				k,				// number of neighbors to return
 		ANNidxArray		nn_idx = NULL,	// nearest neighbor array (modified)
 		ANNdistArray	dd = NULL,		// dist to near neighbors (modified)
-		double			eps=0.0);		// error bound
+		double			eps=0.0,		// error bound
+		int		maxPts = 0);
 
 	int theDim()						// return dimension of space
 		{ return dim; }
