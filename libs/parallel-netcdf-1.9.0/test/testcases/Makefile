# Makefile.in generated by automake 1.15 from Makefile.am.
# test/testcases/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
# Copyright (C) 2003, Northwestern University and Argonne National Laboratory
# See COPYRIGHT notice in top-level directory.
#
# $Id: Makefile.am 3582 2017-12-09 18:50:38Z wkliao $
#
# test/testcases/Makefile.  Generated from Makefile.in by configure.

am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/parallel-netcdf
pkgincludedir = $(includedir)/parallel-netcdf
pkglibdir = $(libdir)/parallel-netcdf
pkglibexecdir = $(libexecdir)/parallel-netcdf
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
#am__append_1 = $(FC_DEFINE)SIZEOF_MPI_AINT_IS_4
am__append_2 = $(FC_DEFINE)HAVE_DECL_MPI_OFFSET
am__append_3 = $(FC_DEFINE)HAVE_DECL_MPI_OFFSET
am__append_4 = -DERANGE_FILL
am__append_5 = erange_fill
#am__append_6 = varn_intf \
#                   attrf \
#                   buftype_freef \
#                   put_parameter \
#                   test_vardf

##am__append_7 = inq_num_varsf \
##                   inq_recsizef \
##                   test_vardf90 \
##                   varn_real

check_PROGRAMS = $(am__EXEEXT_4) put_all_kinds$(EXEEXT) \
	redef1$(EXEEXT) tst_vars_fill$(EXEEXT)
TESTS = $(am__EXEEXT_4) seq_runs.sh
subdir = test/testcases
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/aclocal_coverage.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/include/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = erange_fill$(EXEEXT)
#am__EXEEXT_2 = varn_intf$(EXEEXT) attrf$(EXEEXT) \
#	buftype_freef$(EXEEXT) \
#	put_parameter$(EXEEXT) test_vardf$(EXEEXT)
##am__EXEEXT_3 =  \
##	inq_num_varsf$(EXEEXT) \
##	inq_recsizef$(EXEEXT) \
##	test_vardf90$(EXEEXT) \
##	varn_real$(EXEEXT)
am__EXEEXT_4 = ncmpi_vars_null_stride$(EXEEXT) vectors$(EXEEXT) \
	collective_error$(EXEEXT) test_varm$(EXEEXT) \
	alignment_test$(EXEEXT) flexible$(EXEEXT) flexible2$(EXEEXT) \
	flexible_varm$(EXEEXT) nonblocking$(EXEEXT) noclobber$(EXEEXT) \
	record$(EXEEXT) inq_num_vars$(EXEEXT) varn_int$(EXEEXT) \
	modes$(EXEEXT) one_record$(EXEEXT) inq_recsize$(EXEEXT) \
	test_vard$(EXEEXT) varn_contig$(EXEEXT) ivarn$(EXEEXT) \
	check_striping$(EXEEXT) add_var$(EXEEXT) buftype_free$(EXEEXT) \
	last_large_var$(EXEEXT) check_type$(EXEEXT) \
	test_erange$(EXEEXT) scalar$(EXEEXT) null_args$(EXEEXT) \
	tst_dimsizes$(EXEEXT) mix_collectives$(EXEEXT) \
	large_var_cdf5$(EXEEXT) tst_max_var_dims$(EXEEXT) \
	tst_info$(EXEEXT) tst_vars_fill$(EXEEXT) $(am__EXEEXT_1) \
	$(am__EXEEXT_2) $(am__EXEEXT_3)
add_var_SOURCES = add_var.c
add_var_OBJECTS = add_var.$(OBJEXT)
add_var_LDADD = $(LDADD)
add_var_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
alignment_test_SOURCES = alignment_test.c
alignment_test_OBJECTS = alignment_test.$(OBJEXT)
alignment_test_LDADD = $(LDADD)
alignment_test_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
am__attrf_SOURCES_DIST = attrf.f
#am_attrf_OBJECTS = attrf.$(OBJEXT)
attrf_OBJECTS = $(am_attrf_OBJECTS)
attrf_LDADD = $(LDADD)
attrf_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
buftype_free_SOURCES = buftype_free.c
buftype_free_OBJECTS = buftype_free.$(OBJEXT)
buftype_free_LDADD = $(LDADD)
buftype_free_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
am__buftype_freef_SOURCES_DIST = buftype_freef.f
#am_buftype_freef_OBJECTS = buftype_freef.$(OBJEXT)
buftype_freef_OBJECTS = $(am_buftype_freef_OBJECTS)
buftype_freef_LDADD = $(LDADD)
buftype_freef_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
check_striping_SOURCES = check_striping.c
check_striping_OBJECTS = check_striping.$(OBJEXT)
check_striping_LDADD = $(LDADD)
check_striping_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
check_type_SOURCES = check_type.c
check_type_OBJECTS = check_type.$(OBJEXT)
check_type_LDADD = $(LDADD)
check_type_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
collective_error_SOURCES = collective_error.c
collective_error_OBJECTS = collective_error.$(OBJEXT)
collective_error_LDADD = $(LDADD)
collective_error_DEPENDENCIES =  \
	${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
nodist_erange_fill_OBJECTS = erange_fill.$(OBJEXT)
erange_fill_OBJECTS = $(nodist_erange_fill_OBJECTS)
erange_fill_LDADD = $(LDADD)
erange_fill_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
flexible_SOURCES = flexible.c
flexible_OBJECTS = flexible.$(OBJEXT)
flexible_LDADD = $(LDADD)
flexible_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
flexible2_SOURCES = flexible2.c
flexible2_OBJECTS = flexible2.$(OBJEXT)
flexible2_LDADD = $(LDADD)
flexible2_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
flexible_varm_SOURCES = flexible_varm.c
flexible_varm_OBJECTS = flexible_varm.$(OBJEXT)
flexible_varm_LDADD = $(LDADD)
flexible_varm_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
inq_num_vars_SOURCES = inq_num_vars.c
inq_num_vars_OBJECTS = inq_num_vars.$(OBJEXT)
inq_num_vars_LDADD = $(LDADD)
inq_num_vars_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
am__inq_num_varsf_SOURCES_DIST = inq_num_varsf.f90
##am_inq_num_varsf_OBJECTS =  \
##	inq_num_varsf.$(OBJEXT)
inq_num_varsf_OBJECTS = $(am_inq_num_varsf_OBJECTS)
inq_num_varsf_LDADD = $(LDADD)
inq_num_varsf_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
inq_recsize_SOURCES = inq_recsize.c
inq_recsize_OBJECTS = inq_recsize.$(OBJEXT)
inq_recsize_LDADD = $(LDADD)
inq_recsize_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
am__inq_recsizef_SOURCES_DIST = inq_recsizef.f90
##am_inq_recsizef_OBJECTS =  \
##	inq_recsizef.$(OBJEXT)
inq_recsizef_OBJECTS = $(am_inq_recsizef_OBJECTS)
inq_recsizef_LDADD = $(LDADD)
inq_recsizef_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
ivarn_SOURCES = ivarn.c
ivarn_OBJECTS = ivarn.$(OBJEXT)
ivarn_LDADD = $(LDADD)
ivarn_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
large_var_cdf5_SOURCES = large_var_cdf5.c
large_var_cdf5_OBJECTS = large_var_cdf5.$(OBJEXT)
large_var_cdf5_LDADD = $(LDADD)
large_var_cdf5_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
last_large_var_SOURCES = last_large_var.c
last_large_var_OBJECTS = last_large_var.$(OBJEXT)
last_large_var_LDADD = $(LDADD)
last_large_var_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
mix_collectives_SOURCES = mix_collectives.c
mix_collectives_OBJECTS = mix_collectives.$(OBJEXT)
mix_collectives_LDADD = $(LDADD)
mix_collectives_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
modes_SOURCES = modes.c
modes_OBJECTS = modes.$(OBJEXT)
modes_LDADD = $(LDADD)
modes_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
ncmpi_vars_null_stride_SOURCES = ncmpi_vars_null_stride.c
ncmpi_vars_null_stride_OBJECTS = ncmpi_vars_null_stride.$(OBJEXT)
ncmpi_vars_null_stride_LDADD = $(LDADD)
ncmpi_vars_null_stride_DEPENDENCIES =  \
	${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
noclobber_SOURCES = noclobber.c
noclobber_OBJECTS = noclobber.$(OBJEXT)
noclobber_LDADD = $(LDADD)
noclobber_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
nonblocking_SOURCES = nonblocking.c
nonblocking_OBJECTS = nonblocking.$(OBJEXT)
nonblocking_LDADD = $(LDADD)
nonblocking_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
null_args_SOURCES = null_args.c
null_args_OBJECTS = null_args.$(OBJEXT)
null_args_LDADD = $(LDADD)
null_args_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
one_record_SOURCES = one_record.c
one_record_OBJECTS = one_record.$(OBJEXT)
one_record_LDADD = $(LDADD)
one_record_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
nodist_put_all_kinds_OBJECTS = put_all_kinds.$(OBJEXT)
put_all_kinds_OBJECTS = $(nodist_put_all_kinds_OBJECTS)
put_all_kinds_LDADD = $(LDADD)
put_all_kinds_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
am__put_parameter_SOURCES_DIST = put_parameter.f
#am_put_parameter_OBJECTS = put_parameter.$(OBJEXT)
put_parameter_OBJECTS = $(am_put_parameter_OBJECTS)
put_parameter_LDADD = $(LDADD)
put_parameter_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
record_SOURCES = record.c
record_OBJECTS = record.$(OBJEXT)
record_LDADD = $(LDADD)
record_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
redef1_SOURCES = redef1.c
redef1_OBJECTS = redef1.$(OBJEXT)
redef1_LDADD = $(LDADD)
redef1_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
scalar_SOURCES = scalar.c
scalar_OBJECTS = scalar.$(OBJEXT)
scalar_LDADD = $(LDADD)
scalar_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
test_erange_SOURCES = test_erange.c
test_erange_OBJECTS = test_erange.$(OBJEXT)
test_erange_LDADD = $(LDADD)
test_erange_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
test_vard_SOURCES = test_vard.c
test_vard_OBJECTS = test_vard.$(OBJEXT)
test_vard_LDADD = $(LDADD)
test_vard_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
am__test_vardf_SOURCES_DIST = test_vardf.F
#am_test_vardf_OBJECTS = test_vardf.$(OBJEXT)
test_vardf_OBJECTS = $(am_test_vardf_OBJECTS)
test_vardf_LDADD = $(LDADD)
test_vardf_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
am__test_vardf90_SOURCES_DIST = test_vardf90.f90
##am_test_vardf90_OBJECTS =  \
##	test_vardf90.$(OBJEXT)
test_vardf90_OBJECTS = $(am_test_vardf90_OBJECTS)
test_vardf90_LDADD = $(LDADD)
test_vardf90_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
test_varm_SOURCES = test_varm.c
test_varm_OBJECTS = test_varm.$(OBJEXT)
test_varm_LDADD = $(LDADD)
test_varm_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
tst_dimsizes_SOURCES = tst_dimsizes.c
tst_dimsizes_OBJECTS = tst_dimsizes.$(OBJEXT)
tst_dimsizes_LDADD = $(LDADD)
tst_dimsizes_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
tst_info_SOURCES = tst_info.c
tst_info_OBJECTS = tst_info.$(OBJEXT)
tst_info_LDADD = $(LDADD)
tst_info_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
tst_max_var_dims_SOURCES = tst_max_var_dims.c
tst_max_var_dims_OBJECTS = tst_max_var_dims.$(OBJEXT)
tst_max_var_dims_LDADD = $(LDADD)
tst_max_var_dims_DEPENDENCIES =  \
	${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
nodist_tst_vars_fill_OBJECTS = tst_vars_fill.$(OBJEXT)
tst_vars_fill_OBJECTS = $(nodist_tst_vars_fill_OBJECTS)
tst_vars_fill_LDADD = $(LDADD)
tst_vars_fill_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
varn_contig_SOURCES = varn_contig.c
varn_contig_OBJECTS = varn_contig.$(OBJEXT)
varn_contig_LDADD = $(LDADD)
varn_contig_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
varn_int_SOURCES = varn_int.c
varn_int_OBJECTS = varn_int.$(OBJEXT)
varn_int_LDADD = $(LDADD)
varn_int_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
am__varn_intf_SOURCES_DIST = varn_intf.f
#am_varn_intf_OBJECTS = varn_intf.$(OBJEXT)
varn_intf_OBJECTS = $(am_varn_intf_OBJECTS)
varn_intf_LDADD = $(LDADD)
varn_intf_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
am__varn_real_SOURCES_DIST = varn_real.f90
##am_varn_real_OBJECTS =  \
##	varn_real.$(OBJEXT)
varn_real_OBJECTS = $(am_varn_real_OBJECTS)
varn_real_LDADD = $(LDADD)
varn_real_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
vectors_SOURCES = vectors.c
vectors_OBJECTS = vectors.$(OBJEXT)
vectors_LDADD = $(LDADD)
vectors_DEPENDENCIES = ${top_builddir}/src/libs/libpnetcdf.la \
	../common/libtestutils.la
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src/include
depcomp = $(SHELL) $(top_srcdir)/./scripts/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
PPF77COMPILE = $(F77) $(FC_DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_FFLAGS) $(FFLAGS)
LTPPF77COMPILE = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(F77) $(FC_DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_FFLAGS) $(FFLAGS)
AM_V_PPF77 = $(am__v_PPF77_$(V))
am__v_PPF77_ = $(am__v_PPF77_$(AM_DEFAULT_VERBOSITY))
am__v_PPF77_0 = @echo "  PPF77   " $@;
am__v_PPF77_1 = 
F77LD = $(F77)
F77LINK = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(F77LD) $(AM_FFLAGS) $(FFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_F77LD = $(am__v_F77LD_$(V))
am__v_F77LD_ = $(am__v_F77LD_$(AM_DEFAULT_VERBOSITY))
am__v_F77LD_0 = @echo "  F77LD   " $@;
am__v_F77LD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
F77COMPILE = $(F77) $(AM_FFLAGS) $(FFLAGS)
LTF77COMPILE = $(LIBTOOL) $(AM_V_lt) --tag=F77 $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(F77) $(AM_FFLAGS) $(FFLAGS)
AM_V_F77 = $(am__v_F77_$(V))
am__v_F77_ = $(am__v_F77_$(AM_DEFAULT_VERBOSITY))
am__v_F77_0 = @echo "  F77     " $@;
am__v_F77_1 = 
FCCOMPILE = $(FC) $(AM_FCFLAGS) $(FCFLAGS)
LTFCCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(FC) $(AM_FCFLAGS) $(FCFLAGS)
AM_V_FC = $(am__v_FC_$(V))
am__v_FC_ = $(am__v_FC_$(AM_DEFAULT_VERBOSITY))
am__v_FC_0 = @echo "  FC      " $@;
am__v_FC_1 = 
FCLD = $(FC)
FCLINK = $(LIBTOOL) $(AM_V_lt) --tag=FC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(FCLD) $(AM_FCFLAGS) $(FCFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_FCLD = $(am__v_FCLD_$(V))
am__v_FCLD_ = $(am__v_FCLD_$(AM_DEFAULT_VERBOSITY))
am__v_FCLD_0 = @echo "  FCLD    " $@;
am__v_FCLD_1 = 
SOURCES = add_var.c alignment_test.c $(attrf_SOURCES) buftype_free.c \
	$(buftype_freef_SOURCES) check_striping.c check_type.c \
	collective_error.c $(nodist_erange_fill_SOURCES) flexible.c \
	flexible2.c flexible_varm.c inq_num_vars.c \
	$(inq_num_varsf_SOURCES) inq_recsize.c $(inq_recsizef_SOURCES) \
	ivarn.c large_var_cdf5.c last_large_var.c mix_collectives.c \
	modes.c ncmpi_vars_null_stride.c noclobber.c nonblocking.c \
	null_args.c one_record.c $(nodist_put_all_kinds_SOURCES) \
	$(put_parameter_SOURCES) record.c redef1.c scalar.c \
	test_erange.c test_vard.c $(test_vardf_SOURCES) \
	$(test_vardf90_SOURCES) test_varm.c tst_dimsizes.c tst_info.c \
	tst_max_var_dims.c $(nodist_tst_vars_fill_SOURCES) \
	varn_contig.c varn_int.c $(varn_intf_SOURCES) \
	$(varn_real_SOURCES) vectors.c
DIST_SOURCES = add_var.c alignment_test.c $(am__attrf_SOURCES_DIST) \
	buftype_free.c $(am__buftype_freef_SOURCES_DIST) \
	check_striping.c check_type.c collective_error.c flexible.c \
	flexible2.c flexible_varm.c inq_num_vars.c \
	$(am__inq_num_varsf_SOURCES_DIST) inq_recsize.c \
	$(am__inq_recsizef_SOURCES_DIST) ivarn.c large_var_cdf5.c \
	last_large_var.c mix_collectives.c modes.c \
	ncmpi_vars_null_stride.c noclobber.c nonblocking.c null_args.c \
	one_record.c $(am__put_parameter_SOURCES_DIST) record.c \
	redef1.c scalar.c test_erange.c test_vard.c \
	$(am__test_vardf_SOURCES_DIST) \
	$(am__test_vardf90_SOURCES_DIST) test_varm.c tst_dimsizes.c \
	tst_info.c tst_max_var_dims.c varn_contig.c varn_int.c \
	$(am__varn_intf_SOURCES_DIST) $(am__varn_real_SOURCES_DIST) \
	vectors.c
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__extra_recursive_targets = tests-recursive
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
LOG_DRIVER = $(SHELL) $(top_srcdir)/./scripts/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.sh.log=.log)
SH_LOG_DRIVER = $(SHELL) $(top_srcdir)/./scripts/test-driver
SH_LOG_COMPILE = $(SH_LOG_COMPILER) $(AM_SH_LOG_FLAGS) $(SH_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/./scripts/depcomp \
	$(top_srcdir)/./scripts/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ABIVERSION = 1:0:0
ABIVERSIONFLAGS = -version-info $(ABIVERSION)
ACLOCAL = ${SHELL} /home/eabdelha/homedir/libs/parallel-netcdf-1.9.0/scripts/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /home/eabdelha/homedir/libs/parallel-netcdf-1.9.0/scripts/missing autoconf
AUTOHEADER = ${SHELL} /home/eabdelha/homedir/libs/parallel-netcdf-1.9.0/scripts/missing autoheader
AUTOMAKE = ${SHELL} /home/eabdelha/homedir/libs/parallel-netcdf-1.9.0/scripts/missing automake-1.15
AWK = gawk
CC = /usr/local/bin/mpicc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CONFIGURE_ARGS_CLEAN = --prefix=/homedir/libs/PnetCDF --disable-fortran
CONFIG_DATE = Tue Feb 20 11:42:41 GMT 2018
CPP = /usr/local/bin/mpicc -E
CPPFLAGS = 
CXX = /usr/local/bin/mpicxx
CXXCPP = /usr/local/bin/mpicxx -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
DVIPDF = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_ERANGE_FILL = 1
ENABLE_LARGE_REQ = 
ENABLE_NULL_BYTE_HEADER_PADDING = 
ENABLE_SUBFILING = 0
EXEEXT = 
F77 = 
FC = 
FCFLAGS = 
FCFLAGS_F = 
FCFLAGS_F90 = 
FCFLAGS_f = 
FCFLAGS_f90 = 
FCLIBS = 
FC_DEFINE = 
FC_DEFS = HAVE_CONFIG_H
FC_MODEXT = 
FC_MODINC = 
FFIXEDFORMFLAG = 
FFLAGS = 
FFREEFORMFLAG = 
FGREP = /bin/grep -F
GCOV = gcov
GREP = /bin/grep
HAVE_F77_GNU_INT = no
HAVE_F77_INT1 = no
HAVE_F77_INT2 = no
HAVE_F77_INT8 = no
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTENTV = INOUT
LATEX = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
M4 = m4
M4FFLAGS =  -DPNETCDF
M4FLAGS =  -DPNETCDF $(am__append_4) -I${top_srcdir}/m4
MAINT = 
MAKEINFO = ${SHELL} /home/eabdelha/homedir/libs/parallel-netcdf-1.9.0/scripts/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
MPICC = /usr/local/bin/mpicc
MPICXX = /usr/local/bin/mpicxx
MPIF77 = 
MPIF90 = 
NF_INT1_T = 
NF_INT2_T = 
NF_INT8_T = 
NM = /usr/bin/nm -B
NMEDIT = 
NMFLAGS = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = parallel-netcdf
PACKAGE_BUGREPORT = parallel-netcdf@mcs.anl.gov
PACKAGE_NAME = parallel-netcdf
PACKAGE_STRING = parallel-netcdf 1.9.0
PACKAGE_TARNAME = parallel-netcdf
PACKAGE_URL = 
PACKAGE_VERSION = 1.9.0
PATH_SEPARATOR = :
PNETCDF_DEBUG = 0
PNETCDF_VERSION = 1.9.0
PNETCDF_VERSION_MAJOR = 1
PNETCDF_VERSION_MINOR = 9
PNETCDF_VERSION_PRE = 
PNETCDF_VERSION_SUB = 0
PNF_FILL_INT64 = 
PNF_FILL_UINT = 
PNF_FILL_UINT64 = 
PNF_INT8_MODIFIER = 
PNF_X_INT8_MAX = 
PNF_X_INT8_MIN = 
PNF_X_UINT8_MAX = 
PNF_X_UINT_MAX = 
RANLIB = ranlib
RELAX_COORD_BOUND = 0
RM = rm
SED = /bin/sed
SED_I = /bin/sed -i''
SEQ_CC = /usr/bin/gcc
SET_MAKE = 
SHELL = /bin/bash
SIZEOF_MPI_OFFSET = 8
STRIP = strip
TESTMPIRUN = /usr/local/bin/mpiexec -n NP
TESTOUTDIR = .
TESTSEQRUN = 
USE_MPIF_HEADER = 
VERSION = 1.9.0
abs_builddir = /home/eabdelha/homedir/libs/parallel-netcdf-1.9.0/test/testcases
abs_srcdir = /home/eabdelha/homedir/libs/parallel-netcdf-1.9.0/test/testcases
abs_top_builddir = /home/eabdelha/homedir/libs/parallel-netcdf-1.9.0
abs_top_srcdir = /home/eabdelha/homedir/libs/parallel-netcdf-1.9.0
ac_ct_AR = ar
ac_ct_CC = /usr/local/bin/mpicc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
ac_ct_F77 = 
ac_ct_FC = 
ac_cv_c_bigendian = no
ac_empty = 
ac_mpi_prog_MPICC = /usr/local/bin/mpicc
ac_mpi_prog_MPICXX = /usr/local/bin/mpicxx
ac_mpi_prog_MPIF77 = 
ac_mpi_prog_MPIF90 = 
ac_mpi_prog_TESTMPIRUN = /usr/local/bin/mpiexec
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
enable_shared = no
enable_static = yes
exec_prefix = ${prefix}
has_fortran = no
has_mpicxx = yes
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
in_place_swap = yes
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/eabdelha/homedir/libs/parallel-netcdf-1.9.0/scripts/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /homedir/libs/PnetCDF
program_transform_name = s,x,x,
psdir = ${docdir}
rm_cmd = 
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
SUFFIXES = .o .c .f .F .f90
AM_DEFAULT_SOURCE_EXT = .c
AM_CPPFLAGS = -I$(top_srcdir)/src/include -I$(srcdir)/../common \
	-I$(top_builddir)/src/include
AM_FFLAGS = -I$(top_builddir)/src/binding/f77 $(am__append_1) \
	$(am__append_2)
AM_FCFLAGS = $(FC_MODINC)$(top_builddir)/src/binding/f90 \
	$(FC_MODINC)$(srcdir)/../common \
	-I$(top_builddir)/src/binding/f77 $(am__append_3)
LDADD = ${top_builddir}/src/libs/libpnetcdf.la ../common/libtestutils.la -lm
AM_CFLAGS = -DHAVE_DECL_MPI_OFFSET
NCMPIGEN = $(top_builddir)/src/utils/ncmpigen/ncmpigen
NCMPIDIFF = $(top_builddir)/src/utils/ncmpidiff/ncmpidiff
TESTPROGRAMS = ncmpi_vars_null_stride vectors collective_error \
	test_varm alignment_test flexible flexible2 flexible_varm \
	nonblocking noclobber record inq_num_vars varn_int modes \
	one_record inq_recsize test_vard varn_contig ivarn \
	check_striping add_var buftype_free last_large_var check_type \
	test_erange scalar null_args tst_dimsizes mix_collectives \
	large_var_cdf5 tst_max_var_dims tst_info tst_vars_fill \
	$(am__append_5) $(am__append_6) $(am__append_7)
M4_SRCS = put_all_kinds.m4 erange_fill.m4 tst_vars_fill.m4
nodist_put_all_kinds_SOURCES = put_all_kinds.c
nodist_erange_fill_SOURCES = erange_fill.c
nodist_tst_vars_fill_SOURCES = tst_vars_fill.c
#varn_intf_SOURCES = varn_intf.f
#attrf_SOURCES = attrf.f
#buftype_freef_SOURCES = buftype_freef.f
#put_parameter_SOURCES = put_parameter.f
#test_vardf_SOURCES = test_vardf.F
##inq_num_varsf_SOURCES = inq_num_varsf.f90
##inq_recsizef_SOURCES = inq_recsizef.f90
##test_vardf90_SOURCES = test_vardf90.f90
##varn_real_SOURCES = varn_real.f90

# autimake 1.11.3 has not yet implemented AM_TESTS_ENVIRONMENT
# For newer versions, we can use AM_TESTS_ENVIRONMENT instead
# AM_TESTS_ENVIRONMENT  = TESTPROGRAMS="$(TESTPROGRAMS)" ; export TESTPROGRAMS;
# AM_TESTS_ENVIRONMENT += TESTSEQRUN="$(TESTSEQRUN)" ; export TESTSEQRUN;
# AM_TESTS_ENVIRONMENT += TESTOUTDIR="$(TESTOUTDIR)" ; export TESTOUTDIR;
TESTS_ENVIRONMENT = TESTPROGRAMS="$(TESTPROGRAMS)" ; export \
	TESTPROGRAMS; TESTSEQRUN="$(TESTSEQRUN)" ; export TESTSEQRUN; \
	TESTOUTDIR="$(TESTOUTDIR)" ; export TESTOUTDIR;
TEST_EXTENSIONS = .sh
LOG_COMPILER = $(srcdir)/wrap_runs.sh
SH_LOG_COMPILER = 
NC_FILES = $(TESTPROGRAMS:%=$(TESTOUTDIR)/%.nc)
CLEANFILES = $(M4_SRCS:.m4=.c) core core.* *.gcda *.gcno *.gcov gmon.out \
             $(TESTOUTDIR)/testfile.nc \
             $(TESTOUTDIR)/redef1.nc \
             $(TESTOUTDIR)/put_all_kinds.nc.cdf1 \
             $(TESTOUTDIR)/put_all_kinds.nc.cdf2 \
             $(TESTOUTDIR)/put_all_kinds.nc.cdf5 \
             $(NC_FILES)

EXTRA_DIST = $(M4_SRCS) seq_runs.sh redef-good.ncdump wrap_runs.sh

# Some of these tests are designed to run on one process,
# Run them on 4 processes to see if they can handle well
# Some of these tests are designed to run on 4 processes,
# Run them on 2, 4, and 6 processes to see if they can handle well
TESTMPIRUN2 = `echo $(TESTMPIRUN) | $(SED) -e 's/NP/2/g'`
TESTMPIRUN4 = `echo $(TESTMPIRUN) | $(SED) -e 's/NP/4/g'`
TESTMPIRUN6 = `echo $(TESTMPIRUN) | $(SED) -e 's/NP/6/g'`
all: all-am

.SUFFIXES:
.SUFFIXES: .o .c .f .F .f90 .lo .log .m4 .obj .sh .sh$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu test/testcases/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu test/testcases/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

add_var$(EXEEXT): $(add_var_OBJECTS) $(add_var_DEPENDENCIES) $(EXTRA_add_var_DEPENDENCIES) 
	@rm -f add_var$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(add_var_OBJECTS) $(add_var_LDADD) $(LIBS)

alignment_test$(EXEEXT): $(alignment_test_OBJECTS) $(alignment_test_DEPENDENCIES) $(EXTRA_alignment_test_DEPENDENCIES) 
	@rm -f alignment_test$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(alignment_test_OBJECTS) $(alignment_test_LDADD) $(LIBS)

attrf$(EXEEXT): $(attrf_OBJECTS) $(attrf_DEPENDENCIES) $(EXTRA_attrf_DEPENDENCIES) 
	@rm -f attrf$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(attrf_OBJECTS) $(attrf_LDADD) $(LIBS)

buftype_free$(EXEEXT): $(buftype_free_OBJECTS) $(buftype_free_DEPENDENCIES) $(EXTRA_buftype_free_DEPENDENCIES) 
	@rm -f buftype_free$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(buftype_free_OBJECTS) $(buftype_free_LDADD) $(LIBS)

buftype_freef$(EXEEXT): $(buftype_freef_OBJECTS) $(buftype_freef_DEPENDENCIES) $(EXTRA_buftype_freef_DEPENDENCIES) 
	@rm -f buftype_freef$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(buftype_freef_OBJECTS) $(buftype_freef_LDADD) $(LIBS)

check_striping$(EXEEXT): $(check_striping_OBJECTS) $(check_striping_DEPENDENCIES) $(EXTRA_check_striping_DEPENDENCIES) 
	@rm -f check_striping$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_striping_OBJECTS) $(check_striping_LDADD) $(LIBS)

check_type$(EXEEXT): $(check_type_OBJECTS) $(check_type_DEPENDENCIES) $(EXTRA_check_type_DEPENDENCIES) 
	@rm -f check_type$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(check_type_OBJECTS) $(check_type_LDADD) $(LIBS)

collective_error$(EXEEXT): $(collective_error_OBJECTS) $(collective_error_DEPENDENCIES) $(EXTRA_collective_error_DEPENDENCIES) 
	@rm -f collective_error$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(collective_error_OBJECTS) $(collective_error_LDADD) $(LIBS)

erange_fill$(EXEEXT): $(erange_fill_OBJECTS) $(erange_fill_DEPENDENCIES) $(EXTRA_erange_fill_DEPENDENCIES) 
	@rm -f erange_fill$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(erange_fill_OBJECTS) $(erange_fill_LDADD) $(LIBS)

flexible$(EXEEXT): $(flexible_OBJECTS) $(flexible_DEPENDENCIES) $(EXTRA_flexible_DEPENDENCIES) 
	@rm -f flexible$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(flexible_OBJECTS) $(flexible_LDADD) $(LIBS)

flexible2$(EXEEXT): $(flexible2_OBJECTS) $(flexible2_DEPENDENCIES) $(EXTRA_flexible2_DEPENDENCIES) 
	@rm -f flexible2$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(flexible2_OBJECTS) $(flexible2_LDADD) $(LIBS)

flexible_varm$(EXEEXT): $(flexible_varm_OBJECTS) $(flexible_varm_DEPENDENCIES) $(EXTRA_flexible_varm_DEPENDENCIES) 
	@rm -f flexible_varm$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(flexible_varm_OBJECTS) $(flexible_varm_LDADD) $(LIBS)

inq_num_vars$(EXEEXT): $(inq_num_vars_OBJECTS) $(inq_num_vars_DEPENDENCIES) $(EXTRA_inq_num_vars_DEPENDENCIES) 
	@rm -f inq_num_vars$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(inq_num_vars_OBJECTS) $(inq_num_vars_LDADD) $(LIBS)

inq_num_varsf$(EXEEXT): $(inq_num_varsf_OBJECTS) $(inq_num_varsf_DEPENDENCIES) $(EXTRA_inq_num_varsf_DEPENDENCIES) 
	@rm -f inq_num_varsf$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(inq_num_varsf_OBJECTS) $(inq_num_varsf_LDADD) $(LIBS)

inq_recsize$(EXEEXT): $(inq_recsize_OBJECTS) $(inq_recsize_DEPENDENCIES) $(EXTRA_inq_recsize_DEPENDENCIES) 
	@rm -f inq_recsize$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(inq_recsize_OBJECTS) $(inq_recsize_LDADD) $(LIBS)

inq_recsizef$(EXEEXT): $(inq_recsizef_OBJECTS) $(inq_recsizef_DEPENDENCIES) $(EXTRA_inq_recsizef_DEPENDENCIES) 
	@rm -f inq_recsizef$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(inq_recsizef_OBJECTS) $(inq_recsizef_LDADD) $(LIBS)

ivarn$(EXEEXT): $(ivarn_OBJECTS) $(ivarn_DEPENDENCIES) $(EXTRA_ivarn_DEPENDENCIES) 
	@rm -f ivarn$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ivarn_OBJECTS) $(ivarn_LDADD) $(LIBS)

large_var_cdf5$(EXEEXT): $(large_var_cdf5_OBJECTS) $(large_var_cdf5_DEPENDENCIES) $(EXTRA_large_var_cdf5_DEPENDENCIES) 
	@rm -f large_var_cdf5$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(large_var_cdf5_OBJECTS) $(large_var_cdf5_LDADD) $(LIBS)

last_large_var$(EXEEXT): $(last_large_var_OBJECTS) $(last_large_var_DEPENDENCIES) $(EXTRA_last_large_var_DEPENDENCIES) 
	@rm -f last_large_var$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(last_large_var_OBJECTS) $(last_large_var_LDADD) $(LIBS)

mix_collectives$(EXEEXT): $(mix_collectives_OBJECTS) $(mix_collectives_DEPENDENCIES) $(EXTRA_mix_collectives_DEPENDENCIES) 
	@rm -f mix_collectives$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mix_collectives_OBJECTS) $(mix_collectives_LDADD) $(LIBS)

modes$(EXEEXT): $(modes_OBJECTS) $(modes_DEPENDENCIES) $(EXTRA_modes_DEPENDENCIES) 
	@rm -f modes$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(modes_OBJECTS) $(modes_LDADD) $(LIBS)

ncmpi_vars_null_stride$(EXEEXT): $(ncmpi_vars_null_stride_OBJECTS) $(ncmpi_vars_null_stride_DEPENDENCIES) $(EXTRA_ncmpi_vars_null_stride_DEPENDENCIES) 
	@rm -f ncmpi_vars_null_stride$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ncmpi_vars_null_stride_OBJECTS) $(ncmpi_vars_null_stride_LDADD) $(LIBS)

noclobber$(EXEEXT): $(noclobber_OBJECTS) $(noclobber_DEPENDENCIES) $(EXTRA_noclobber_DEPENDENCIES) 
	@rm -f noclobber$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(noclobber_OBJECTS) $(noclobber_LDADD) $(LIBS)

nonblocking$(EXEEXT): $(nonblocking_OBJECTS) $(nonblocking_DEPENDENCIES) $(EXTRA_nonblocking_DEPENDENCIES) 
	@rm -f nonblocking$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(nonblocking_OBJECTS) $(nonblocking_LDADD) $(LIBS)

null_args$(EXEEXT): $(null_args_OBJECTS) $(null_args_DEPENDENCIES) $(EXTRA_null_args_DEPENDENCIES) 
	@rm -f null_args$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(null_args_OBJECTS) $(null_args_LDADD) $(LIBS)

one_record$(EXEEXT): $(one_record_OBJECTS) $(one_record_DEPENDENCIES) $(EXTRA_one_record_DEPENDENCIES) 
	@rm -f one_record$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(one_record_OBJECTS) $(one_record_LDADD) $(LIBS)

put_all_kinds$(EXEEXT): $(put_all_kinds_OBJECTS) $(put_all_kinds_DEPENDENCIES) $(EXTRA_put_all_kinds_DEPENDENCIES) 
	@rm -f put_all_kinds$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(put_all_kinds_OBJECTS) $(put_all_kinds_LDADD) $(LIBS)

put_parameter$(EXEEXT): $(put_parameter_OBJECTS) $(put_parameter_DEPENDENCIES) $(EXTRA_put_parameter_DEPENDENCIES) 
	@rm -f put_parameter$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(put_parameter_OBJECTS) $(put_parameter_LDADD) $(LIBS)

record$(EXEEXT): $(record_OBJECTS) $(record_DEPENDENCIES) $(EXTRA_record_DEPENDENCIES) 
	@rm -f record$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(record_OBJECTS) $(record_LDADD) $(LIBS)

redef1$(EXEEXT): $(redef1_OBJECTS) $(redef1_DEPENDENCIES) $(EXTRA_redef1_DEPENDENCIES) 
	@rm -f redef1$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(redef1_OBJECTS) $(redef1_LDADD) $(LIBS)

scalar$(EXEEXT): $(scalar_OBJECTS) $(scalar_DEPENDENCIES) $(EXTRA_scalar_DEPENDENCIES) 
	@rm -f scalar$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scalar_OBJECTS) $(scalar_LDADD) $(LIBS)

test_erange$(EXEEXT): $(test_erange_OBJECTS) $(test_erange_DEPENDENCIES) $(EXTRA_test_erange_DEPENDENCIES) 
	@rm -f test_erange$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_erange_OBJECTS) $(test_erange_LDADD) $(LIBS)

test_vard$(EXEEXT): $(test_vard_OBJECTS) $(test_vard_DEPENDENCIES) $(EXTRA_test_vard_DEPENDENCIES) 
	@rm -f test_vard$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_vard_OBJECTS) $(test_vard_LDADD) $(LIBS)

test_vardf$(EXEEXT): $(test_vardf_OBJECTS) $(test_vardf_DEPENDENCIES) $(EXTRA_test_vardf_DEPENDENCIES) 
	@rm -f test_vardf$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(test_vardf_OBJECTS) $(test_vardf_LDADD) $(LIBS)

test_vardf90$(EXEEXT): $(test_vardf90_OBJECTS) $(test_vardf90_DEPENDENCIES) $(EXTRA_test_vardf90_DEPENDENCIES) 
	@rm -f test_vardf90$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(test_vardf90_OBJECTS) $(test_vardf90_LDADD) $(LIBS)

test_varm$(EXEEXT): $(test_varm_OBJECTS) $(test_varm_DEPENDENCIES) $(EXTRA_test_varm_DEPENDENCIES) 
	@rm -f test_varm$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_varm_OBJECTS) $(test_varm_LDADD) $(LIBS)

tst_dimsizes$(EXEEXT): $(tst_dimsizes_OBJECTS) $(tst_dimsizes_DEPENDENCIES) $(EXTRA_tst_dimsizes_DEPENDENCIES) 
	@rm -f tst_dimsizes$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_dimsizes_OBJECTS) $(tst_dimsizes_LDADD) $(LIBS)

tst_info$(EXEEXT): $(tst_info_OBJECTS) $(tst_info_DEPENDENCIES) $(EXTRA_tst_info_DEPENDENCIES) 
	@rm -f tst_info$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_info_OBJECTS) $(tst_info_LDADD) $(LIBS)

tst_max_var_dims$(EXEEXT): $(tst_max_var_dims_OBJECTS) $(tst_max_var_dims_DEPENDENCIES) $(EXTRA_tst_max_var_dims_DEPENDENCIES) 
	@rm -f tst_max_var_dims$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_max_var_dims_OBJECTS) $(tst_max_var_dims_LDADD) $(LIBS)

tst_vars_fill$(EXEEXT): $(tst_vars_fill_OBJECTS) $(tst_vars_fill_DEPENDENCIES) $(EXTRA_tst_vars_fill_DEPENDENCIES) 
	@rm -f tst_vars_fill$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tst_vars_fill_OBJECTS) $(tst_vars_fill_LDADD) $(LIBS)

varn_contig$(EXEEXT): $(varn_contig_OBJECTS) $(varn_contig_DEPENDENCIES) $(EXTRA_varn_contig_DEPENDENCIES) 
	@rm -f varn_contig$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(varn_contig_OBJECTS) $(varn_contig_LDADD) $(LIBS)

varn_int$(EXEEXT): $(varn_int_OBJECTS) $(varn_int_DEPENDENCIES) $(EXTRA_varn_int_DEPENDENCIES) 
	@rm -f varn_int$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(varn_int_OBJECTS) $(varn_int_LDADD) $(LIBS)

varn_intf$(EXEEXT): $(varn_intf_OBJECTS) $(varn_intf_DEPENDENCIES) $(EXTRA_varn_intf_DEPENDENCIES) 
	@rm -f varn_intf$(EXEEXT)
	$(AM_V_F77LD)$(F77LINK) $(varn_intf_OBJECTS) $(varn_intf_LDADD) $(LIBS)

varn_real$(EXEEXT): $(varn_real_OBJECTS) $(varn_real_DEPENDENCIES) $(EXTRA_varn_real_DEPENDENCIES) 
	@rm -f varn_real$(EXEEXT)
	$(AM_V_FCLD)$(FCLINK) $(varn_real_OBJECTS) $(varn_real_LDADD) $(LIBS)

vectors$(EXEEXT): $(vectors_OBJECTS) $(vectors_DEPENDENCIES) $(EXTRA_vectors_DEPENDENCIES) 
	@rm -f vectors$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vectors_OBJECTS) $(vectors_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/add_var.Po
include ./$(DEPDIR)/alignment_test.Po
include ./$(DEPDIR)/buftype_free.Po
include ./$(DEPDIR)/check_striping.Po
include ./$(DEPDIR)/check_type.Po
include ./$(DEPDIR)/collective_error.Po
include ./$(DEPDIR)/erange_fill.Po
include ./$(DEPDIR)/flexible.Po
include ./$(DEPDIR)/flexible2.Po
include ./$(DEPDIR)/flexible_varm.Po
include ./$(DEPDIR)/inq_num_vars.Po
include ./$(DEPDIR)/inq_recsize.Po
include ./$(DEPDIR)/ivarn.Po
include ./$(DEPDIR)/large_var_cdf5.Po
include ./$(DEPDIR)/last_large_var.Po
include ./$(DEPDIR)/mix_collectives.Po
include ./$(DEPDIR)/modes.Po
include ./$(DEPDIR)/ncmpi_vars_null_stride.Po
include ./$(DEPDIR)/noclobber.Po
include ./$(DEPDIR)/nonblocking.Po
include ./$(DEPDIR)/null_args.Po
include ./$(DEPDIR)/one_record.Po
include ./$(DEPDIR)/put_all_kinds.Po
include ./$(DEPDIR)/record.Po
include ./$(DEPDIR)/redef1.Po
include ./$(DEPDIR)/scalar.Po
include ./$(DEPDIR)/test_erange.Po
include ./$(DEPDIR)/test_vard.Po
include ./$(DEPDIR)/test_varm.Po
include ./$(DEPDIR)/tst_dimsizes.Po
include ./$(DEPDIR)/tst_info.Po
include ./$(DEPDIR)/tst_max_var_dims.Po
include ./$(DEPDIR)/tst_vars_fill.Po
include ./$(DEPDIR)/varn_contig.Po
include ./$(DEPDIR)/varn_int.Po
include ./$(DEPDIR)/vectors.Po

.F.o:
	$(AM_V_PPF77)$(PPF77COMPILE) -c -o $@ $<

.F.obj:
	$(AM_V_PPF77)$(PPF77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.F.lo:
	$(AM_V_PPF77)$(LTPPF77COMPILE) -c -o $@ $<
.F.f:
	$(F77COMPILE) -F $<

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

.f.o:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ $<

.f.obj:
	$(AM_V_F77)$(F77COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.f.lo:
	$(AM_V_F77)$(LTF77COMPILE) -c -o $@ $<

.f90.o:
	$(AM_V_FC)$(FCCOMPILE) -c -o $@ $(FCFLAGS_f90) $<

.f90.obj:
	$(AM_V_FC)$(FCCOMPILE) -c -o $@ $(FCFLAGS_f90) `$(CYGPATH_W) '$<'`

.f90.lo:
	$(AM_V_FC)$(LTFCCOMPILE) -c -o $@ $(FCFLAGS_f90) $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
tests-local: 

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
ncmpi_vars_null_stride.log: ncmpi_vars_null_stride$(EXEEXT)
	@p='ncmpi_vars_null_stride$(EXEEXT)'; \
	b='ncmpi_vars_null_stride'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
vectors.log: vectors$(EXEEXT)
	@p='vectors$(EXEEXT)'; \
	b='vectors'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
collective_error.log: collective_error$(EXEEXT)
	@p='collective_error$(EXEEXT)'; \
	b='collective_error'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_varm.log: test_varm$(EXEEXT)
	@p='test_varm$(EXEEXT)'; \
	b='test_varm'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
alignment_test.log: alignment_test$(EXEEXT)
	@p='alignment_test$(EXEEXT)'; \
	b='alignment_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
flexible.log: flexible$(EXEEXT)
	@p='flexible$(EXEEXT)'; \
	b='flexible'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
flexible2.log: flexible2$(EXEEXT)
	@p='flexible2$(EXEEXT)'; \
	b='flexible2'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
flexible_varm.log: flexible_varm$(EXEEXT)
	@p='flexible_varm$(EXEEXT)'; \
	b='flexible_varm'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
nonblocking.log: nonblocking$(EXEEXT)
	@p='nonblocking$(EXEEXT)'; \
	b='nonblocking'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
noclobber.log: noclobber$(EXEEXT)
	@p='noclobber$(EXEEXT)'; \
	b='noclobber'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
record.log: record$(EXEEXT)
	@p='record$(EXEEXT)'; \
	b='record'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
inq_num_vars.log: inq_num_vars$(EXEEXT)
	@p='inq_num_vars$(EXEEXT)'; \
	b='inq_num_vars'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
varn_int.log: varn_int$(EXEEXT)
	@p='varn_int$(EXEEXT)'; \
	b='varn_int'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
modes.log: modes$(EXEEXT)
	@p='modes$(EXEEXT)'; \
	b='modes'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
one_record.log: one_record$(EXEEXT)
	@p='one_record$(EXEEXT)'; \
	b='one_record'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
inq_recsize.log: inq_recsize$(EXEEXT)
	@p='inq_recsize$(EXEEXT)'; \
	b='inq_recsize'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_vard.log: test_vard$(EXEEXT)
	@p='test_vard$(EXEEXT)'; \
	b='test_vard'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
varn_contig.log: varn_contig$(EXEEXT)
	@p='varn_contig$(EXEEXT)'; \
	b='varn_contig'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ivarn.log: ivarn$(EXEEXT)
	@p='ivarn$(EXEEXT)'; \
	b='ivarn'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_striping.log: check_striping$(EXEEXT)
	@p='check_striping$(EXEEXT)'; \
	b='check_striping'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
add_var.log: add_var$(EXEEXT)
	@p='add_var$(EXEEXT)'; \
	b='add_var'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
buftype_free.log: buftype_free$(EXEEXT)
	@p='buftype_free$(EXEEXT)'; \
	b='buftype_free'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
last_large_var.log: last_large_var$(EXEEXT)
	@p='last_large_var$(EXEEXT)'; \
	b='last_large_var'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_type.log: check_type$(EXEEXT)
	@p='check_type$(EXEEXT)'; \
	b='check_type'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_erange.log: test_erange$(EXEEXT)
	@p='test_erange$(EXEEXT)'; \
	b='test_erange'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
scalar.log: scalar$(EXEEXT)
	@p='scalar$(EXEEXT)'; \
	b='scalar'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
null_args.log: null_args$(EXEEXT)
	@p='null_args$(EXEEXT)'; \
	b='null_args'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tst_dimsizes.log: tst_dimsizes$(EXEEXT)
	@p='tst_dimsizes$(EXEEXT)'; \
	b='tst_dimsizes'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
mix_collectives.log: mix_collectives$(EXEEXT)
	@p='mix_collectives$(EXEEXT)'; \
	b='mix_collectives'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
large_var_cdf5.log: large_var_cdf5$(EXEEXT)
	@p='large_var_cdf5$(EXEEXT)'; \
	b='large_var_cdf5'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tst_max_var_dims.log: tst_max_var_dims$(EXEEXT)
	@p='tst_max_var_dims$(EXEEXT)'; \
	b='tst_max_var_dims'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tst_info.log: tst_info$(EXEEXT)
	@p='tst_info$(EXEEXT)'; \
	b='tst_info'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tst_vars_fill.log: tst_vars_fill$(EXEEXT)
	@p='tst_vars_fill$(EXEEXT)'; \
	b='tst_vars_fill'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
erange_fill.log: erange_fill$(EXEEXT)
	@p='erange_fill$(EXEEXT)'; \
	b='erange_fill'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
varn_intf.log: varn_intf$(EXEEXT)
	@p='varn_intf$(EXEEXT)'; \
	b='varn_intf'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
attrf.log: attrf$(EXEEXT)
	@p='attrf$(EXEEXT)'; \
	b='attrf'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
buftype_freef.log: buftype_freef$(EXEEXT)
	@p='buftype_freef$(EXEEXT)'; \
	b='buftype_freef'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
put_parameter.log: put_parameter$(EXEEXT)
	@p='put_parameter$(EXEEXT)'; \
	b='put_parameter'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_vardf.log: test_vardf$(EXEEXT)
	@p='test_vardf$(EXEEXT)'; \
	b='test_vardf'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
inq_num_varsf.log: inq_num_varsf$(EXEEXT)
	@p='inq_num_varsf$(EXEEXT)'; \
	b='inq_num_varsf'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
inq_recsizef.log: inq_recsizef$(EXEEXT)
	@p='inq_recsizef$(EXEEXT)'; \
	b='inq_recsizef'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_vardf90.log: test_vardf90$(EXEEXT)
	@p='test_vardf90$(EXEEXT)'; \
	b='test_vardf90'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
varn_real.log: varn_real$(EXEEXT)
	@p='varn_real$(EXEEXT)'; \
	b='varn_real'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.sh.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(SH_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_SH_LOG_DRIVER_FLAGS) $(SH_LOG_DRIVER_FLAGS) -- $(SH_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.sh$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(SH_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_SH_LOG_DRIVER_FLAGS) $(SH_LOG_DRIVER_FLAGS) -- $(SH_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

tests: tests-am

tests-am: tests-local

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am tests-am tests-local uninstall \
	uninstall-am

.PRECIOUS: Makefile


   # Do not add to AM_CPPFLAGS, as it will also be used by Fortran programs
   # AM_CPPFLAGS += -DHAVE_DECL_MPI_OFFSET

$(M4_SRCS:.m4=.c): Makefile

.m4.c:
	$(M4) $(AM_M4FLAGS) $(M4FLAGS) $< >$@

../common/libtestutils.la:
	set -e; cd ../common && $(MAKE) $(MFLAGS) tests

ptest ptest4: $(TESTPROGRAMS)
	for j in 0 1 ; do { \
	export PNETCDF_SAFE_MODE=$$j ; \
	set -e; for i in $(TESTPROGRAMS); do ( \
	$(TESTMPIRUN4) ./$$i $(TESTOUTDIR)/$$i.nc ; \
	) ; done ; } ; done

ptest2: $(TESTPROGRAMS)
	for j in 0 1 ; do { \
	export PNETCDF_SAFE_MODE=$$j ; \
	set -e; for i in $(TESTPROGRAMS); do ( \
	$(TESTMPIRUN2) ./$$i $(TESTOUTDIR)/$$i.nc ; \
	) ; done ; } ; done

ptest6: $(TESTPROGRAMS)
	for j in 0 1 ; do { \
	export PNETCDF_SAFE_MODE=$$j ; \
	set -e; for i in $(TESTPROGRAMS); do ( \
	$(TESTMPIRUN_6) ./$$i $(TESTOUTDIR)/$$i.nc ; \
	) ; done ; } ; done

ptests: ptest2 ptest4 ptest6
ptest8 ptest10:

# build check targets but not invoke
tests-local: all $(check_PROGRAMS)

.PHONY: ptest ptests ptest2 ptest4 ptest6 ptest8 ptest10

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
